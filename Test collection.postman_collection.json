{
	"info": {
		"_postman_id": "c4879dd7-a752-4e1c-94bf-6dd4abeb433e",
		"name": "Test collection",
		"description": "Test collection containing at least 8 requests with meaningful tests for this API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29559386",
		"_collection_link": "https://dark-robot-288056.postman.co/workspace/VG-Viktoria_Kvalit22~f873acb6-d77e-4ace-a69b-74e32c4e1b3c/collection/29559386-c4879dd7-a752-4e1c-94bf-6dd4abeb433e?action=share&source=collection_link&creator=29559386"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "CreateToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						},
						"description": "Creates a new auth token to use for access to the PUT and DELETE /booking."
					},
					"response": [
						{
							"name": "Auth - CreateToken",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}"
								},
								"url": {
									"raw": "https://restful-booker.herokuapp.com/auth",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "27"
								},
								{
									"key": "Etag",
									"value": "W/\"1b-KpFaOPXTQIqRoUv+M9vvr2kEH6Y\""
								},
								{
									"key": "Date",
									"value": "Fri, 08 Sep 2023 21:32:05 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"e1d10b9f4afa281\"\n}"
						}
					]
				}
			],
			"description": "Contain Auth - CreateToken"
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "GetBookingIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Response body is a JSON\", function () {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"pm.test(\"JSON value is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.forEach((booking) => pm.expect(typeof(booking.bookingid)).to.eql('number'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{booking}}",
							"host": [
								"{{booking}}"
							]
						},
						"description": "Returns the ids of all the bookings that exist within the API. Can take optional query strings to search and return a subset of booking ids."
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var response = JSON.parse(responseBody);",
									"pm.test(\"Response schema is correct\", function() {",
									"    pm.expect(response.hasOwnProperty('bookingid')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('firstname')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('lastname')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('totalprice')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('depositpaid')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('bookingdates')).to.be.true;",
									"    pm.expect(response.booking.bookingdates.hasOwnProperty('checkin')).to.be.true;",
									"    pm.expect(response.booking.bookingdates.hasOwnProperty('checkout')).to.be.true;",
									"    pm.expect(response.booking.hasOwnProperty('additionalneeds')).to.be.true;",
									"});",
									"",
									"pm.test(\"JSON values are correct types\", function () {",
									"    pm.expect(typeof(response.bookingid)).to.eql('number');",
									"    pm.expect(typeof(response.booking)).to.eql('object');",
									"    pm.expect(typeof(response.booking.firstname)).to.eql('string');",
									"    pm.expect(typeof(response.booking.lastname)).to.eql('string');",
									"    pm.expect(typeof(response.booking.totalprice)).to.eql('number');",
									"    pm.expect(typeof(response.booking.depositpaid)).to.eql('boolean');",
									"    pm.expect(typeof(response.booking.bookingdates.checkin)).to.eql('string');",
									"    pm.expect(typeof(response.booking.bookingdates.checkout)).to.eql('string');",
									"    pm.expect(typeof(response.booking.additionalneeds)).to.eql('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"Jim\",\n    \"lastname\": \"Brown\",\n    \"totalprice\": 111,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2018-01-01\",\n        \"checkout\": \"2019-01-01\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{booking}}",
							"host": [
								"{{booking}}"
							]
						},
						"description": "Creates a new booking in the API"
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var response = JSON.parse(responseBody);",
									"pm.test(\"Response schema is correct\", function() {",
									"    pm.expect(response.hasOwnProperty('firstname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('lastname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('totalprice')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('depositpaid')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('bookingdates')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkin')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkout')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('additionalneeds')).to.be.true;",
									"});",
									"",
									"pm.test(\"JSON values are correct types\", function () {",
									"    pm.expect(typeof(response.firstname)).to.eql('string');",
									"    pm.expect(typeof(response.lastname)).to.eql('string');",
									"    pm.expect(typeof(response.totalprice)).to.eql('number');",
									"    pm.expect(typeof(response.depositpaid)).to.eql('boolean');",
									"    pm.expect(typeof(response.bookingdates.checkin)).to.eql('string');",
									"    pm.expect(typeof(response.bookingdates.checkout)).to.eql('string');",
									"    pm.expect(typeof(response.additionalneeds)).to.eql('string');",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{booking}}{{bookingID}}",
							"host": [
								"{{booking}}{{bookingID}}"
							]
						},
						"description": "Returns a specific booking based upon the booking id provided."
					},
					"response": [
						{
							"name": "GetBooking",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://restful-booker.herokuapp.com/booking/1",
									"protocol": "https",
									"host": [
										"restful-booker",
										"herokuapp",
										"com"
									],
									"path": [
										"booking",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "169"
								},
								{
									"key": "Etag",
									"value": "W/\"a9-RGntJrAkFUlj+1ZXUXo/UA0h9R0\""
								},
								{
									"key": "Date",
									"value": "Fri, 08 Sep 2023 21:39:51 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"firstname\": \"Mark\",\n    \"lastname\": \"Smith\",\n    \"totalprice\": 394,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2023-03-21\",\n        \"checkout\": \"2023-08-28\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}"
						}
					]
				},
				{
					"name": "UpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Response schema is correct\", function() {",
									"    var response = JSON.parse(responseBody);",
									"    pm.expect(response.hasOwnProperty('firstname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('lastname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('totalprice')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('depositpaid')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('bookingdates')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkin')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkout')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('additionalneeds')).to.be.true;",
									"});",
									"",
									"pm.test(\"JSON values are correct types\", function () {",
									"    var response = JSON.parse(responseBody);",
									"    pm.expect(typeof(response.firstname)).to.eql('string');",
									"    pm.expect(typeof(response.lastname)).to.eql('string');",
									"    pm.expect(typeof(response.totalprice)).to.eql('number');",
									"    pm.expect(typeof(response.depositpaid)).to.eql('boolean');",
									"    pm.expect(typeof(response.bookingdates.checkin)).to.eql('string');",
									"    pm.expect(typeof(response.bookingdates.checkout)).to.eql('string');",
									"    pm.expect(typeof(response.additionalneeds)).to.eql('string');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"James\",\n    \"lastname\": \"Brown\",\n    \"totalprice\": 111,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2018-01-01\",\n        \"checkout\": \"2019-01-01\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{booking}}{{bookingID}}",
							"host": [
								"{{booking}}{{bookingID}}"
							]
						},
						"description": "Updates a current booking."
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"",
									"pm.test(\"Response schema is correct\", function() {",
									"    var response = pm.response.json();",
									"    pm.expect(response.hasOwnProperty('firstname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('lastname')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('totalprice')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('depositpaid')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('bookingdates')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkin')).to.be.true;",
									"    pm.expect(response.bookingdates.hasOwnProperty('checkout')).to.be.true;",
									"    pm.expect(response.hasOwnProperty('additionalneeds')).to.be.true;",
									"});",
									"",
									"pm.test(\"JSON values are correct types\", function () {",
									"    var response =pm.response.json();",
									"    pm.expect(typeof(response.firstname)).to.eql('string');",
									"    pm.expect(typeof(response.lastname)).to.eql('string');",
									"    pm.expect(typeof(response.totalprice)).to.eql('number');",
									"    pm.expect(typeof(response.depositpaid)).to.eql('boolean');",
									"    pm.expect(typeof(response.bookingdates.checkin)).to.eql('string');",
									"    pm.expect(typeof(response.bookingdates.checkout)).to.eql('string');",
									"    pm.expect(typeof(response.additionalneeds)).to.eql('string');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"James\",\n    \"lastname\": \"Brown\"\n}"
						},
						"url": {
							"raw": "{{booking}}{{bookingID}}",
							"host": [
								"{{booking}}{{bookingID}}"
							]
						},
						"description": "Updates a current booking with a partial payload"
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{booking}}{{bookingID}}",
							"host": [
								"{{booking}}{{bookingID}}"
							]
						},
						"description": "Returns the ids of all the bookings that exist within the API. Can take optional query strings to search and return a subset of booking ids."
					},
					"response": []
				}
			]
		},
		{
			"name": "Ping",
			"item": [
				{
					"name": "HealthCheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/ping",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"ping"
							]
						},
						"description": "A simple health check endpoint to confirm whether the API is up and running."
					},
					"response": []
				}
			]
		}
	]
}